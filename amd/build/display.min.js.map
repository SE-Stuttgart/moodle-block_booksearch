{"version":3,"file":"display.min.js","sources":["../src/display.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Block core and UI\n *\n * @module     block_booksearch/display\n * @copyright  2024 University of Stuttgart <kasra.habib@iste.uni-stuttgart.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport { render } from 'core/templates';\n\n/**\n * Processes and Displays the search results inside the given element.\n * @param {HTMLElement} element The elemtent to display the results inside.\n * @param {Object} searchResults The search results to display as [filename[chapter{bookurl, context}]].\n * @param {String} chapterLabel The label meaning \"Chapter\" in the active language.\n */\nexport function displayResults(element, searchResults, chapterLabel) {\n    const data = preprocessSearchResults(searchResults, chapterLabel);\n    render('block_booksearch/display', data).then((html) => {\n        element.innerHTML = html;\n    }).catch(ex => {\n        window.console.error('Template rendering failed: ', ex);\n    });\n}\n\n\n/**\n * This function processes the searchResults, so they are usable for the template.\n * @param {Object} searchResults The search results to display as [filename[chapter{bookurl, context}]].\n * @param {String} chapterLabel The label meaning \"Chapter\" in the active language.\n * @returns Array of search results processed to be perfectly used by the template.\n */\nfunction preprocessSearchResults(searchResults, chapterLabel) {\n    const data = [];\n\n    for (const pdfName in searchResults) {\n        if (!searchResults.hasOwnProperty(pdfName)) {\n            continue;\n        }\n        const chapters = [];\n\n        for (const chapter in searchResults[pdfName]) {\n            if (!searchResults[pdfName].hasOwnProperty(chapter)) {\n                continue;\n            }\n            chapters.push({\n                chapter: chapter,\n                bookurl: searchResults[pdfName][chapter].bookurl,\n                context: searchResults[pdfName][chapter].context,\n                chapterLabel: chapterLabel\n            });\n\n        }\n\n        data.push({\n            filename: pdfName,\n            chapters: chapters\n        });\n\n    }\n\n    return { data: data };\n}"],"names":["element","searchResults","chapterLabel","data","pdfName","hasOwnProperty","chapters","chapter","push","bookurl","context","filename","preprocessSearchResults","then","html","innerHTML","catch","ex","window","console","error"],"mappings":";;;;;;;;SA8B+BA,QAASC,cAAeC,oBAC7CC,cAeuBF,cAAeC,oBACtCC,KAAO,OAER,MAAMC,WAAWH,cAAe,KAC5BA,cAAcI,eAAeD,wBAG5BE,SAAW,OAEZ,MAAMC,WAAWN,cAAcG,SAC3BH,cAAcG,SAASC,eAAeE,UAG3CD,SAASE,KAAK,CACVD,QAASA,QACTE,QAASR,cAAcG,SAASG,SAASE,QACzCC,QAAST,cAAcG,SAASG,SAASG,QACzCR,aAAcA,eAKtBC,KAAKK,KAAK,CACNG,SAAUP,QACVE,SAAUA,iBAKX,CAAEH,KAAMA,MA5CFS,CAAwBX,cAAeC,oCAC7C,2BAA4BC,MAAMU,MAAMC,OAC3Cd,QAAQe,UAAYD,QACrBE,OAAMC,KACLC,OAAOC,QAAQC,MAAM,8BAA+BH"}